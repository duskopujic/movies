Index: movies/src/main/java/com/lanaco/movies/Repository/UsersRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lanaco.movies.Repository;\r\n\r\nimport com.lanaco.movies.Models.Users;\r\nimport org.springframework.data.jpa.repository.JpaRepository;\r\nimport org.springframework.stereotype.Repository;\r\n\r\nimport java.util.List;\r\n@Repository\r\npublic interface UsersRepository extends JpaRepository<Users,Integer>{\r\n    List<Users>findAllByUserIdGreaterThanOrderByUserIdDesc(int id);\r\n}\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/src/main/java/com/lanaco/movies/Repository/UsersRepository.java b/movies/src/main/java/com/lanaco/movies/Repository/UsersRepository.java
--- a/movies/src/main/java/com/lanaco/movies/Repository/UsersRepository.java	
+++ b/movies/src/main/java/com/lanaco/movies/Repository/UsersRepository.java	
@@ -5,9 +5,16 @@
 import org.springframework.stereotype.Repository;
 
 import java.util.List;
+import java.util.Optional;
+
 @Repository
 public interface UsersRepository extends JpaRepository<Users,Integer>{
     List<Users>findAllByUserIdGreaterThanOrderByUserIdDesc(int id);
+    Optional<Users>findByEmail(String email);
+    Optional<Users>findByUsersName(String UserName);
+    Optional<Users>findByUserNameOrEmail(String userName,String email);
+    Boolean existsByUsersName(String userName);
+    Boolean existByEmail(String email);
 }
 
 
Index: movies/src/main/java/com/lanaco/movies/Services/Impl/UsersServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lanaco.movies.Services.Impl;\r\n\r\nimport com.lanaco.movies.Repository.UsersRepository;\r\nimport com.lanaco.movies.Models.Users;\r\nimport com.lanaco.movies.Services.UsersService;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.List;\r\n\r\n@Service\r\npublic class UsersServiceImpl implements UsersService {\r\n    private final UsersRepository usersRepository;\r\n\r\n    public UsersServiceImpl(UsersRepository usersRepository){\r\n        this.usersRepository = usersRepository;\r\n    }\r\n    @Override\r\n    public Users create(Users users){\r\n        return usersRepository.save(users);\r\n    }\r\n    @Override\r\n    public List<Users>findAll(){\r\n        return usersRepository.findAllByUserIdGreaterThanOrderByUserIdDesc(0);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/src/main/java/com/lanaco/movies/Services/Impl/UsersServiceImpl.java b/movies/src/main/java/com/lanaco/movies/Services/Impl/UsersServiceImpl.java
--- a/movies/src/main/java/com/lanaco/movies/Services/Impl/UsersServiceImpl.java	
+++ b/movies/src/main/java/com/lanaco/movies/Services/Impl/UsersServiceImpl.java	
@@ -9,7 +9,7 @@
 
 @Service
 public class UsersServiceImpl implements UsersService {
-    private final UsersRepository usersRepository;
+   private final UsersRepository usersRepository;
 
     public UsersServiceImpl(UsersRepository usersRepository){
         this.usersRepository = usersRepository;
Index: movies/src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8080\r\n\r\n//spring.datasource.url=jdbc:postgresql://localhost:5432/movies\r\n//spring.datasource.username=postgres\r\n//spring.datasource.password=dusko1102\r\n\r\nspring.profiles.active=@currentProfile@\r\n\r\nspring.jpa.show-sql=true\r\nspring.jpa.properties.hibernate.format_sql=true
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/movies/src/main/resources/application.properties b/movies/src/main/resources/application.properties
--- a/movies/src/main/resources/application.properties	
+++ b/movies/src/main/resources/application.properties	
@@ -4,6 +4,7 @@
 //spring.datasource.username=postgres
 //spring.datasource.password=dusko1102
 
+
 spring.profiles.active=@currentProfile@
 
 spring.jpa.show-sql=true
Index: movies/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>2.5.6</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.lanaco</groupId>\r\n\t<artifactId>movies</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>movies</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<properties>\r\n\t\t<java.version>1.8</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.postgresql</groupId>\r\n\t\t\t<artifactId>postgresql</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.springfox</groupId>\r\n\t\t\t<artifactId>springfox-swagger2</artifactId>\r\n\t\t\t<version>2.6.1</version>\r\n\t\t\t<scope>compile</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>io.springfox</groupId>\r\n\t\t\t<artifactId>springfox-swagger-ui</artifactId>\r\n\t\t\t<version>2.6.1</version>\r\n\t\t\t<scope>compile</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\t\t</dependency>\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\t<profiles>\r\n\t\t<profile>\r\n\t\t\t<id>dev</id>\r\n\t\t\t<activation>\r\n\t\t\t\t<activeByDefault>true</activeByDefault>\r\n\t\t\t</activation>\r\n\t\t\t<properties>\r\n\t\t\t\t<build.profile.id>dev</build.profile.id>\r\n\t\t\t\t<currentProfile>dev</currentProfile>\r\n\t\t\t</properties>\r\n\t\t</profile>\r\n\t\t<profile>\r\n\t\t\t<id>prod</id>\r\n\t\t\t<properties>\r\n\t\t\t\t<build.profile.id>prod</build.profile.id>\r\n\t\t\t\t<currentProfile>prod</currentProfile>\r\n\t\t\t</properties>\r\n\t\t</profile>\r\n\t\t<profile>\r\n\t\t\t<id>test</id>\r\n\t\t\t<properties>\r\n\t\t\t\t<build.profile.id>test</build.profile.id>\r\n\t\t\t\t<currentProfile>test</currentProfile>\r\n\t\t\t</properties>\r\n\t\t</profile>\r\n\t</profiles>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/pom.xml b/movies/pom.xml
--- a/movies/pom.xml	
+++ b/movies/pom.xml	
@@ -55,6 +55,14 @@
 		</dependency>
 		<dependency>
 			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-validation</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
+			<artifactId>spring-boot-starter-security</artifactId>
+		</dependency>
+		<dependency>
+			<groupId>org.springframework.boot</groupId>
 			<artifactId>spring-boot-starter-test</artifactId>
 			<scope>test</scope>
 		</dependency>
Index: movies/src/main/java/com/lanaco/movies/Models/Users.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lanaco.movies.Models;\r\n\r\n\r\n\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.experimental.Accessors;\r\n\r\nimport javax.persistence.*;\r\nimport javax.xml.soap.Text;\r\nimport java.util.Set;\r\n\r\n@Data\r\n@Entity\r\n@Table(name=\"users\",schema = \"public\")\r\n@Accessors(chain = true)\r\n@NoArgsConstructor\r\npublic class Users {\r\n    @Id\r\n   @GeneratedValue(strategy = GenerationType.AUTO)\r\n    @Column(name = \"user_id\")\r\n    public int userId;\r\n    public String userName;\r\n    public String firstName;\r\n    public   String lastName;\r\n    public String adress;\r\n    public String phoneNumber;\r\n    public String email;\r\n    public String password;\r\n\r\n  //  @ManyToMany\r\n  //  @JoinTable(schema = \"public\",name = \"user_role\",joinColumns = @JoinColumn(name = \"user_id\"),inverseJoinColumns = @JoinColumn(name = \"role_id\"))\r\n   // private Set<Role> roleList;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/src/main/java/com/lanaco/movies/Models/Users.java b/movies/src/main/java/com/lanaco/movies/Models/Users.java
--- a/movies/src/main/java/com/lanaco/movies/Models/Users.java	
+++ b/movies/src/main/java/com/lanaco/movies/Models/Users.java	
@@ -12,7 +12,10 @@
 
 @Data
 @Entity
-@Table(name="users",schema = "public")
+@Table(name="users",schema = "public",uniqueConstraints = {
+        @UniqueConstraint(columnNames = {"username"}),
+        @UniqueConstraint(columnNames = {"password"})
+})
 @Accessors(chain = true)
 @NoArgsConstructor
 public class Users {
Index: movies/src/main/java/com/lanaco/movies/Models/Dto/MoviePeopleDto.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lanaco.movies.Models.Dto;\r\n\r\nimport com.lanaco.movies.Models.MoviePeople;\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.time.LocalDate;\r\n\r\n@Data\r\n@NoArgsConstructor\r\npublic class MoviePeopleDto {\r\n\r\n    public String firstName;\r\n    public String lastName;\r\n    public LocalDate birthDate;\r\n    public String geneder;\r\n\r\npublic MoviePeople toMoviePeople(){\r\n return new MoviePeople()\r\n         .setFirstName(firstName)\r\n         .setLastName(lastName)\r\n         .setBirthDate(birthDate)\r\n         .setGeneder(geneder);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/src/main/java/com/lanaco/movies/Models/Dto/MoviePeopleDto.java b/movies/src/main/java/com/lanaco/movies/Models/Dto/MoviePeopleDto.java
--- a/movies/src/main/java/com/lanaco/movies/Models/Dto/MoviePeopleDto.java	
+++ b/movies/src/main/java/com/lanaco/movies/Models/Dto/MoviePeopleDto.java	
@@ -1,5 +1,6 @@
 package com.lanaco.movies.Models.Dto;
 
+import com.fasterxml.jackson.annotation.JsonFormat;
 import com.lanaco.movies.Models.MoviePeople;
 import lombok.Data;
 import lombok.NoArgsConstructor;
Index: movies/src/main/java/com/lanaco/movies/Controllers/MoviePeopleController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lanaco.movies.Controllers;\r\n\r\nimport com.lanaco.movies.Models.Dto.MoviePeopleDto;\r\nimport com.lanaco.movies.Models.MoviePeople;\r\nimport com.lanaco.movies.Services.MoviePeopleService;\r\nimport org.springframework.cache.annotation.CachePut;\r\nimport org.springframework.http.HttpStatus;\r\nimport org.springframework.http.ResponseEntity;\r\nimport org.springframework.web.bind.annotation.*;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.Date;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\n\r\n@RestController\r\n@RequestMapping (path = \"/movie-people\")\r\npublic class MoviePeopleController\r\n{\r\n    private final MoviePeopleService moviePeopleService;\r\n\r\n    public MoviePeopleController(MoviePeopleService moviePeopleService)\r\n    {\r\n        this.moviePeopleService=moviePeopleService;\r\n    }\r\n    @GetMapping(\"/all\")\r\n    public ResponseEntity<List<MoviePeople>>findAllMoviePeople()\r\n    {\r\n        List<MoviePeople>allMoviePeople= moviePeopleService.findAll();\r\n        return ResponseEntity.ok(allMoviePeople);\r\n    }\r\n    @GetMapping(\"\")\r\n    public ResponseEntity<MoviePeople>getOneMoviePeople(@RequestParam(\"id\")int id){\r\n        Optional<MoviePeople> optionalMoviePeople = moviePeopleService.findOneById(id);\r\n        if(optionalMoviePeople.isPresent())\r\n        {\r\n            return ResponseEntity.ok(optionalMoviePeople.get());\r\n        }\r\n        return new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n    }\r\n    @PostMapping(\"/save\")\r\n    public  ResponseEntity<MoviePeople> create(@RequestBody MoviePeopleDto moviePeopleParam)\r\n    {\r\n        MoviePeople createdMoviePeople = moviePeopleService.create(moviePeopleParam.toMoviePeople());\r\n                return ResponseEntity.ok(createdMoviePeople);\r\n    }\r\n    @PutMapping(\"/update\")\r\n    public ResponseEntity<MoviePeople> updateMoviePeople(@RequestParam(\"id\")int id,\r\n                                                         @RequestParam(\"firstName\")String firstName,\r\n                                                         @RequestParam(\"lastName\")String lastName,\r\n                                                         @RequestParam(\"birthDate\") LocalDate birthDate,\r\n                                                         @RequestParam(\"gender\")String gender)\r\n    {\r\n        Optional<MoviePeople> optionalMoviePeople = moviePeopleService.findOneById(id);\r\n        if (optionalMoviePeople.isPresent())\r\n        {\r\n            MoviePeople moviePeople = optionalMoviePeople.get();\r\n            moviePeople.setFirstName(firstName);\r\n            moviePeople.setLastName(lastName);\r\n            moviePeople.setBirthDate(birthDate);\r\n            moviePeople.setGeneder(gender);\r\n            moviePeopleService.create(moviePeople);\r\n            return ResponseEntity.ok(moviePeople);\r\n        }\r\n        return new ResponseEntity<>(HttpStatus.NOT_FOUND);\r\n    }\r\n    @DeleteMapping(\"/delete\")\r\n    public void deleteMoviePeople(@RequestParam(\"id\")int id){\r\n        moviePeopleService.deleteById(id);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/src/main/java/com/lanaco/movies/Controllers/MoviePeopleController.java b/movies/src/main/java/com/lanaco/movies/Controllers/MoviePeopleController.java
--- a/movies/src/main/java/com/lanaco/movies/Controllers/MoviePeopleController.java	
+++ b/movies/src/main/java/com/lanaco/movies/Controllers/MoviePeopleController.java	
@@ -4,6 +4,7 @@
 import com.lanaco.movies.Models.MoviePeople;
 import com.lanaco.movies.Services.MoviePeopleService;
 import org.springframework.cache.annotation.CachePut;
+import org.springframework.format.annotation.DateTimeFormat;
 import org.springframework.http.HttpStatus;
 import org.springframework.http.ResponseEntity;
 import org.springframework.web.bind.annotation.*;
@@ -49,7 +50,7 @@
                                                          @RequestParam("firstName")String firstName,
                                                          @RequestParam("lastName")String lastName,
                                                          @RequestParam("birthDate") LocalDate birthDate,
-                                                         @RequestParam("gender")String gender)
+                                                         @RequestParam("geneder")String geneder)
     {
         Optional<MoviePeople> optionalMoviePeople = moviePeopleService.findOneById(id);
         if (optionalMoviePeople.isPresent())
@@ -58,7 +59,7 @@
             moviePeople.setFirstName(firstName);
             moviePeople.setLastName(lastName);
             moviePeople.setBirthDate(birthDate);
-            moviePeople.setGeneder(gender);
+            moviePeople.setGeneder(geneder);
             moviePeopleService.create(moviePeople);
             return ResponseEntity.ok(moviePeople);
         }
Index: movies/src/main/java/com/lanaco/movies/Models/MoviePeople.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.lanaco.movies.Models;\r\n\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\nimport lombok.experimental.Accessors;\r\n\r\nimport javax.persistence.*;\r\nimport java.time.LocalDate;\r\nimport java.util.Date;\r\n\r\n@Data\r\n@NoArgsConstructor\r\n@Entity\r\n@Table(name = \"movie_people\", schema = \"public\")\r\n@Accessors(chain = true)\r\npublic class MoviePeople {\r\n    @Id\r\n    @GeneratedValue(strategy = GenerationType.AUTO)\r\n    @Column(name = \"moviePeopleId\")\r\n    public int moviePeopleId;\r\n    public String firstName;\r\n    public String lastName;\r\n    public LocalDate birthDate;\r\n    public String geneder;\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/movies/src/main/java/com/lanaco/movies/Models/MoviePeople.java b/movies/src/main/java/com/lanaco/movies/Models/MoviePeople.java
--- a/movies/src/main/java/com/lanaco/movies/Models/MoviePeople.java	
+++ b/movies/src/main/java/com/lanaco/movies/Models/MoviePeople.java	
@@ -1,5 +1,6 @@
 package com.lanaco.movies.Models;
 
+import com.fasterxml.jackson.annotation.JsonFormat;
 import lombok.Data;
 import lombok.NoArgsConstructor;
 import lombok.experimental.Accessors;
@@ -20,6 +21,7 @@
     public int moviePeopleId;
     public String firstName;
     public String lastName;
+    @JsonFormat(pattern = "yyyy-MM-dd")
     public LocalDate birthDate;
     public String geneder;
 
Index: movies/src/main/resources/application-dev.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>server.port=8080\r\n\r\nspring.datasource.url=jdbc:postgresql://localhost:5432/movies\r\nspring.datasource.username=postgres\r\nspring.datasource.password=dusko1102\r\n\r\nspring.jpa.open-in-view=false\r\n\r\nspring.jpa.hibernate.use-new-id-generator-mappings=false\r\n\r\nspring.jpa.hibernate.ddl-auto=none\r\n\r\nspring.jpa.show-sql=true\r\n\r\nspring.datasource.initialization-mode=never
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/movies/src/main/resources/application-dev.properties b/movies/src/main/resources/application-dev.properties
--- a/movies/src/main/resources/application-dev.properties	
+++ b/movies/src/main/resources/application-dev.properties	
@@ -4,6 +4,7 @@
 spring.datasource.username=postgres
 spring.datasource.password=dusko1102
 
+
 spring.jpa.open-in-view=false
 
 spring.jpa.hibernate.use-new-id-generator-mappings=false
Index: .idea/runConfigurations.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/runConfigurations.xml b/.idea/runConfigurations.xml
new file mode 100644
--- /dev/null	
+++ b/.idea/runConfigurations.xml	
@@ -0,0 +1,10 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="com.android.tools.idea.compose.preview.runconfiguration.ComposePreviewRunConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
